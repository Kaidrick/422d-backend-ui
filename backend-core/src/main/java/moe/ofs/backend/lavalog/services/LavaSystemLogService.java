package moe.ofs.backend.lavalog.services;

import moe.ofs.backend.pagination.LavaSystemLogPageObject;
import moe.ofs.backend.pagination.PageVo;
import moe.ofs.backend.domain.LogEntry;

import java.io.IOException;
import java.util.Date;

/**
 * Add, search and dump log entry generated by {@see LogEntry }
 * <p>
 * Pagination is required for infinite scroll in the frontend Vue project.
 */
public interface LavaSystemLogService {
    /**
     * Find one entry by its ID
     *
     * @param id ID of the LogEntry
     * @return LogEntry object
     */
    LogEntry findById(Long id);

    /**
     * Insert one LogEntry into a repository
     *
     * @param logEntry the LogEntry object to be inserted
     */
    void save(LogEntry logEntry);

    /**
     * Retrieve all log entries for the current session. When background task starts, it generates a start timestamp.
     * The method should return all logs that are generated after this timestamp, with pagination
     *
     * @return
     */
    PageVo<LogEntry> findAllForCurrentSession(Long current, Integer size);

    /**
     * Retrieve all log entries with timestamp greater or equal to start date and less or equal to end date
     * @param object start date
     * @return page view object for LogEntry
     */
    PageVo<LogEntry> findLogsWithCriteria(LavaSystemLogPageObject object);

    /**
     * Write selected logs to json (default) or csv file. Takes a File or Path.
     */
    void saveLogFile(boolean toJson) throws IOException;

}
